from bs4 import BeautifulSoup
from threading import Thread
import selenium
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from datetime import date
import xlsxwriter  # NOTE: MUST USE MODULES THAT SUPPORT XLSX FORMAT (AND NOT XLS)
import time
import requests
import re

s = Service(ChromeDriverManager().install())

def task(url_submission):
    global browser

    soup = BeautifulSoup(browser.page_source, "html.parser")
    try:
        price = (soup.find("span", {"class":"element-label price"})).text.strip()
    except AttributeError:
        price = ""

    try:
        bedroom_number = (soup.find("div", {"class":"property-info-element beds"})).text.strip()
    except AttributeError:
        bedroom_number = ""

    try:
        bathroom_number = (soup.find("div", {"class":"property-info-element baths"})).text.strip()
    except AttributeError:
        bathroom_number = ""

    try:
        floor_size_scout = (soup.find("div", {"class":"property-info-element area"})).text.strip()
        floor_size = ""
        for char in floor_size_scout:
            if char.isdigit():
                floor_size += char
    except AttributeError:
        floor_size = ""

    try:
        floor_level_scout1 = (soup.find("tr", {"class": "property-attr floor-level"}))
        floor_level_scout2 = floor_level_scout1.find(class_ = "value-block").text.strip()
        floor_level_scout_list = floor_level_scout2.split(" ")
        floor_level = floor_level_scout_list[0]
    except AttributeError:
        floor_level = ""

    try:
        block_number_scout = (soup.find("span", {"itemprop":"streetAddress"})).text.strip()
        block_number = (block_number_scout.split(" "))[0]
    except AttributeError:
        block_number = ""

    if block_number == "":
        try:
            block_number_scout = (soup.find("div", {"class":"listing-title text-transform-none"})).text.strip()
            block_number_scout_list = block_number_scout.split(" ")
            block_number = block_number_scout_list[1]
        except AttributeError:
            block_number = ""

    modified_price = ""
    for char in price:
        if char.isdigit():
            modified_price += char

    try:
        psf = round(int(modified_price)/int(floor_size))
    except AttributeError:
        psf = ""

    if hdb == True:
        ppg_link_scout_list = url_submission.split("-")
        ppg_link_id = ppg_link_scout_list[-1]
    elif condo == True:
        ppg_link_id = url_submission[40:48]

    print(f"Price: {price}")
    print(f"Bedroom number: {bedroom_number}")
    print(f"Bathroom number: {bathroom_number}")
    print(f"Floor size: {floor_size}")
    print(f"Floor level: {floor_level}")
    print(f"Block number: {block_number}")
    print(f"PSF: {psf}")
    print(f"PPG Link ID: {ppg_link_id}")
    print()

    browser.close()

    return [bedroom_number, bathroom_number, block_number, floor_level, price, floor_size, psf, url_submission, ppg_link_id]

def write_in_excel_row(number):
    global worksheet
    global info_list
    global condo
    global hdb
    global rent
    global sale

    worksheet.write(number, 0, number)

    if hdb == True or (condo == True and rent == True):
        worksheet.write(number, 1, "Competitor")

    worksheet.write(number, 2, info_list[0])

    worksheet.write(number, 3, info_list[1])

    # BLOCK NUMBER
    worksheet.write(number, 4, info_list[2])

    # FLOOR
    worksheet.write(number, 5, info_list[3])

    # CONDITION BLANK

    # PRICE
    worksheet.write(number, 7, info_list[4])

    # FLOOR SIZE
    worksheet.write(number, 8, info_list[5])

    # PSF
    worksheet.write(number, 9, info_list[6])

    # PPG LINK
    worksheet.write(number, 10, info_list[7])

    # PPG LINK ID CORRECT
    worksheet.write(number, 11, info_list[8])

def webscrape():
    global browser
    global worksheet
    global info_list
    global condo
    global hdb
    global rent
    global sale

    condo = False
    hdb = False
    rent = False
    sale = False

    condo_or_hdb_query = False
    while condo_or_hdb_query == False:
        question = input(
f"""
Are you searching for Condo or HDB? 
Enter 1 for Condo and 2 for HDB
"""
        )
        if question == "1":
            condo = True
            condo_or_hdb_query = True
        elif question == "2":
            hdb = True
            condo_or_hdb_query = True
        else:
            print("INVALID INPUT: Enter 1 for Condo and 2 for HDB")

    rent_or_sale_query = False
    while rent_or_sale_query == False:
        question = input(
f"""
Are you searching for Rent or Sale?
Enter 1 for Rent and 2 for Sale 
"""
        )
        if question == "1":
            rent = True
            rent_or_sale_query = True
        elif question == "2":
            sale = True
            rent_or_sale_query = True
        else:
            print("INVALID INPUT: Enter 1 for Rent and 2 for Sale")


    exit_URL_entry = False
    counter = 0
    list_of_URLs = []
    while exit_URL_entry == False:
        counter += 1
        url = input(
f"""
Enter URL {counter} 
If you have finished submitting all your URLs, enter DONE
""")
        if url.upper() != "DONE":
            list_of_URLs.append(url)
        else:
            exit_URL_entry = True

    file_name_query = input("Enter filename: ")

    #will need to change save_location based on user
    save_location = "/Users/jinyangchen/PycharmProjects/Webscrape PropertyGuru/"

    # NOTE xlsxwriter does not allow me to modify existing files. It can only create new files
    # Openpyxl is an alternative module but idk why it just keeps bugging out for me
    workbook = xlsxwriter.Workbook(save_location + f"{file_name_query}" + ".xlsx")
    worksheet = workbook.add_worksheet("Data")

    # Fill up headers
    if hdb == True and sale == True:
        #A
        worksheet.write(0, 0, "Listing ID")

        #B
        if hdb == True or (condo == True and rent == True):
            worksheet.write(0, 1, "Agent")
        elif condo == True and sale == True:
            worksheet.write(0, 1, "Development")

        #C
        worksheet.write(0, 2, "Bedrooms")

        #D
        worksheet.write(0, 3, "Bathrooms")

        #E
        if hdb == True:
            worksheet.write(0, 4, "Block")
        elif condo == True and rent == True:
            worksheet.write(0, 4, "Development")
        elif condo == True and sale == True:
            worksheet.write(0, 4, "Floor")

        #F
        if rent == True:
            worksheet.write(0, 5, "Furnishing")
        elif hdb == True and sale == True:
            worksheet.write(0, 5, "Floor")
        elif condo == True and sale == True:
            worksheet.write(0, 5, "Condition")

        #G
        if hdb == True:
            worksheet.write(0, 6, "Condition")
        elif condo == True and rent == True:
            worksheet.write(0, 6, "Floor Level")
        elif condo == True and sale == True:
            worksheet.write(0, 6, "Price")

        #H
        if hdb == True and rent == True:
            worksheet.write(0, 7, "Floor")

        worksheet.write(0, 8, "Sqft")
        worksheet.write(0, 9, "Psf")
        worksheet.write(0, 10, "PPG Link")
        worksheet.write(0, 11, "PPG Link ID")

    exit_main = False
    counter = 0
    while exit_main == False:
        browser = webdriver.Chrome(service=s)
        browser.get(list_of_URLs[counter])
        info_list = task(list_of_URLs[counter])
        counter += 1
        write_in_excel_row(counter)
        if counter == len(list_of_URLs):
            exit_main = True

    workbook.close()

    browser.quit()

webscrape()
